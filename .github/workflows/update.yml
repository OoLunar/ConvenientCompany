name: Push Update

on:
  push:
    branches: ["master"]
    paths: ["icon.png", "LICENSE", "manifest.json", "README.md"]
  workflow_dispatch:

jobs:
    process-commit:
        name: Process Commit
        runs-on: ubuntu-latest
        permissions: write-all
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: Setup .NET
            uses: actions/setup-dotnet@v3
            with:
              dotnet-version: 8
          - name: Process commit
            run: dotnet run --project tools/SemVerParser/SemVerParser.csproj
          - name: Commit if needed
            run: tools/commit-if-needed.sh
          - name: Find Zip File
            id: find-zip
            run: echo ZIP_FILE="$(find . -name "*.zip" -print -quit)" >> $GITHUB_ENV
          - name: Grab latest commit
            id: grab-commit
            run: echo COMMIT="$(git rev-parse HEAD)" >> $GITHUB_ENV
          - name: Grab latest version
            id: grab-version
            run: echo VERSION="$(jq -r '.version_number' manifest.json)" >> $GITHUB_ENV
          - name: Grab modpack name
            id: grab-modpack-name
            run: echo MODPACK_NAME="$(jq -r '.name' manifest.json)" >> $GITHUB_ENV
          - name: Grab modpack description
            id: grab-modpack-description
            run: echo MODPACK_DESCRIPTION="$(jq -r '.description' manifest.json)" >> $GITHUB_ENV
          - name: Should Release Check
            id: should-release
            continue-on-error: true
            run: git ls-remote --exit-code --tags origin "${{ env.VERSION }}"
          - name: Create GitHub Release
            if: steps.should-release.outcome == 'failure'
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ env.VERSION }}
              release_name: v${{ env.VERSION }}
              draft: false
              prerelease: false
              body_path: CHANGELOG.md
              commitish: ${{ env.COMMIT }}
          - name: Upload to Thunderstore
            if: steps.should-release.outcome == 'failure'
            uses: GreenTF/upload-thunderstore-package@v4.2
            with:
              token: ${{ secrets.THUNDERSTORE_TOKEN }}
              community: lethal-company
              repo: northstar.thunderstore.io
              namespace: OoLunar
              # https://github.com/GreenTF/upload-thunderstore-package/issues/24 claims that the zip file will fill in the version and name.
              name: ${{ env.MODPACK_NAME }}
              description: ${{ env.MODPACK_DESCRIPTION }}
              version: ${{ env.VERSION }}
              file: ${{ env.ZIP_FILE }}
              categories: |
                modpacks,
                tools,
                audio,
                clientside,
                video,
                poster